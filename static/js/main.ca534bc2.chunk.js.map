{"version":3,"sources":["assets/light/github-background.svg","assets/light/logo.svg","assets/dark/github-background.svg","assets/dark/logo.svg","utils/usePersistedState.ts","components/Header/styles.ts","components/Header/index.tsx","styles/themes/light.ts","styles/themes/dark.ts","styles/global.ts","services/api.ts","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","pages/Repository/styles.ts","pages/Repository/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","usePersistedState","key","initialState","useState","storageValue","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","Container","styled","header","theme","colors","secondaryText","primaryText","ThemeSwitchContainer","div","moonColor","sunColor","Header","toggleTheme","useContext","ThemeContext","title","logoImage","location","useLocation","src","alt","pathname","onChange","checked","checkedIcon","uncheckedIcon","onColor","offColor","width","height","handleDiameter","to","size","backgroundImage","primary","secondary","background","error","createGlobalStyle","props","api","axios","create","baseURL","Title","h1","Form","form","hasError","css","shade","Error","span","Repositories","Dashboard","newRepo","setNewRepo","inputError","setInputError","storagedRepositories","repositories","setRepositories","handleAddRepository","useCallback","event","a","preventDefault","get","response","repository","data","onSubmit","value","e","target","placeholder","type","map","full_name","owner","avatar_url","login","description","RepositoryInfo","section","Issues","Repository","setRepository","issues","setIssues","params","useRouteMatch","then","stargazers_count","forks_count","open_issues_count","issue","id","href","html_url","user","Routes","exact","from","path","component","App","light","setTheme","dark","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca534bc2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-background.0b819d63.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-background.e813200c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.116a7eab.svg\";","import { useState, useEffect, Dispatch, SetStateAction } from 'react';\n\ntype Response<T> = [T, Dispatch<SetStateAction<T>>];\n\nfunction usePersistedState<T>(key: string, initialState: T): Response<T> {\n  const [state, setState] = useState(() => {\n    const storageValue = localStorage.getItem(key);\n\n    if (storageValue) {\n      return JSON.parse(storageValue);\n    }\n\n    return initialState;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n\nexport default usePersistedState;\n","import styled from 'styled-components';\n\nexport const Container = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  a {\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.secondaryText};\n    transition: color 0.2s;\n\n    &:hover {\n      color: ${({ theme }) => theme.colors.primaryText};\n    }\n\n    svg {\n      margin-right: 4px;\n    }\n  }\n`;\n\nexport const ThemeSwitchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  svg:first-child {\n    margin-right: 10px;\n    color: ${({ theme }) => theme.colors.moonColor};\n    fill: ${({ theme }) => theme.colors.moonColor};\n    filter: drop-shadow(0px 0px 10px ${({ theme }) => theme.colors.moonColor});\n  }\n\n  svg:last-child {\n    margin-left: 10px;\n    color: ${({ theme }) => theme.colors.sunColor};\n    fill: ${({ theme }) => theme.colors.sunColor};\n    filter: drop-shadow(0px 0px 5px ${({ theme }) => theme.colors.sunColor});\n  }\n`;\n","import React, { useContext } from 'react';\nimport Switch from 'react-switch';\n\nimport { ThemeContext } from 'styled-components';\nimport { useLocation, Link } from 'react-router-dom';\nimport { FiChevronLeft, FiMoon, FiSun } from 'react-icons/fi';\nimport { Container, ThemeSwitchContainer } from './styles';\n\ninterface Props {\n  toggleTheme(): void;\n}\n\nconst Header: React.FC<Props> = ({ toggleTheme }: Props) => {\n  const { title, logoImage } = useContext(ThemeContext);\n  const location = useLocation();\n\n  return (\n    <Container>\n      <img src={logoImage} alt=\"Github Explorer\" />\n      {location.pathname === '/github-explorer' ? (\n        <ThemeSwitchContainer>\n          <FiMoon />\n          <Switch\n            onChange={toggleTheme}\n            checked={title === 'dark'}\n            checkedIcon={false}\n            uncheckedIcon={false}\n            onColor=\"#9bf6ff\"\n            offColor=\"#fcbf49\"\n            width={30}\n            height={10}\n            handleDiameter={20}\n          />\n          <FiSun />\n        </ThemeSwitchContainer>\n      ) : (\n        <Link to=\"/github-explorer\">\n          <FiChevronLeft size={16} />\n          Voltar\n        </Link>\n      )}\n    </Container>\n  );\n};\n\nexport default Header;\n","import backgroundImage from '../../assets/light/github-background.svg';\nimport logoImage from '../../assets/light/logo.svg';\n\nexport default {\n  title: 'light',\n  backgroundImage,\n  logoImage,\n  colors: {\n    primary: '#fff',\n    secondary: '#04d361',\n\n    background: '#f0f0f5',\n    primaryText: '#3d3d4d',\n    secondaryText: '#a8a8b3',\n\n    error: '#e63946',\n\n    moonColor: '#d0d0d0',\n    sunColor: '#fcbf49',\n  },\n};\n","import backgroundImage from '../../assets/dark/github-background.svg';\nimport logoImage from '../../assets/dark/logo.svg';\n\nexport default {\n  title: 'dark',\n  backgroundImage,\n  logoImage,\n  colors: {\n    primary: '#3E3B47',\n    secondary: '#04d361',\n\n    background: '#312E38',\n    primaryText: '#F4EDE8',\n    secondaryText: '#999591',\n\n    error: '#e63946',\n\n    moonColor: '#9bf6ff',\n    sunColor: '#505050',\n  },\n};\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: url(${({ theme }) => theme.backgroundImage}) no-repeat 70% top;\n    background-color: ${(props) => props.theme.colors.background};\n    color: ${(props) => props.theme.colors.primaryText};\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif;\n    transition: all 0.25s linear;\n\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/',\n});\n\nexport default api;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: ${({ theme }) => theme.colors.primaryText};\n  max-width: 450px;\n  line-height: 56px;\n\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 40px;\n  max-width: 700px;\n\n  display: flex;\n\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    border: 0;\n    border-radius: 5px 0 0 5px;\n    color: ${({ theme }) => theme.colors.primaryText};\n    background: ${({ theme }) => theme.colors.primary};\n    border: 2px solid ${({ theme }) => theme.colors.primary};\n    border-right: 0;\n    ${(props) =>\n      props.hasError &&\n      css`\n        border-color: ${({ theme }) => theme.colors.error};\n      `}\n\n    &::placeholder {\n      color: ${({ theme }) => theme.colors.secondaryText};\n    }\n  }\n\n  button {\n    width: 210px;\n    height: 70px;\n    background: ${({ theme }) => theme.colors.secondary};\n    border: 0;\n    border-radius: 0 5px 5px 0;\n    color: #f4ede8;\n    font-weight: bold;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${({ theme }) => shade(0.2, theme.colors.secondary)};\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: ${({ theme }) => theme.colors.error};\n  margin-top: 8px;\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n\n  a {\n    background: ${({ theme }) => theme.colors.primary};\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: ${({ theme }) => theme.colors.primaryText};\n      }\n\n      p {\n        font-size: 18px;\n        color: ${({ theme }) => theme.colors.secondaryText};\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: ${({ theme }) => theme.colors.secondaryText};\n    }\n  }\n`;\n","import React, { useState, useEffect, useCallback, FormEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport { Title, Form, Repositories, Error } from './styles';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storagedRepositories = localStorage.getItem(\n      '@GithubExplorer:repositories',\n    );\n\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GithubExplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  const handleAddRepository = useCallback(\n    async (event: FormEvent<HTMLFormElement>): Promise<void> => {\n      event.preventDefault();\n\n      if (!newRepo) {\n        setInputError('Digite o autor/nome do repositório');\n        return;\n      }\n\n      try {\n        const response = await api.get<Repository>(`repos/${newRepo}`);\n\n        const repository = response.data;\n\n        setRepositories([...repositories, repository]);\n        setNewRepo('');\n        setInputError('');\n      } catch (err) {\n        setInputError('Erro na busca por esse repositório');\n      }\n    },\n    [newRepo, repositories],\n  );\n\n  return (\n    <>\n      <Title>Explore repositórios no Github</Title>\n\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          value={newRepo}\n          onChange={(e) => setNewRepo(e.target.value)}\n          placeholder=\"Digite o nome do repositório\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {repositories.map((repository) => (\n          <Link\n            key={repository.full_name}\n            to={`/repositories/${repository.full_name}`}\n          >\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n\n            <FiChevronRight size={20} />\n          </Link>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const RepositoryInfo = styled.section`\n  margin-top: 80px;\n\n  header {\n    display: flex;\n    align-items: center;\n\n    img {\n      width: 120px;\n      height: 120px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin-left: 24px;\n\n      strong {\n        font-size: 36px;\n        color: ${({ theme }) => theme.colors.primaryText};\n      }\n\n      p {\n        font-size: 18px;\n        color: ${({ theme }) => shade(0.3, theme.colors.secondaryText)};\n        margin-top: 4px;\n      }\n    }\n  }\n\n  ul {\n    display: flex;\n    list-style: none;\n    margin-top: 40px;\n\n    li {\n      & + li {\n        margin-left: 80px;\n      }\n\n      strong {\n        display: block;\n        font-size: 36px;\n        color: ${({ theme }) => theme.colors.primaryText};\n      }\n\n      span {\n        display: block;\n        margin-top: 4px;\n        color: ${({ theme }) => shade(0.3, theme.colors.secondaryText)};\n      }\n    }\n  }\n`;\n\nexport const Issues = styled.div`\n  margin-top: 80px;\n\n  a {\n    background: ${({ theme }) => theme.colors.primary};\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: ${({ theme }) => theme.colors.primaryText};\n      }\n\n      p {\n        font-size: 18px;\n        color: ${({ theme }) => theme.colors.secondaryText};\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: ${({ theme }) => theme.colors.secondaryText};\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport { RepositoryInfo, Issues } from './styles';\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\ninterface Issue {\n  id: number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n  };\n}\n\nconst Repository: React.FC = () => {\n  const [repository, setRepository] = useState<Repository | null>(null);\n  const [issues, setIssues] = useState<Issue[]>([]);\n\n  const { params } = useRouteMatch<RepositoryParams>();\n\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then((response) => {\n      setRepository(response.data);\n    });\n\n    api.get(`repos/${params.repository}/issues`).then((response) => {\n      setIssues(response.data);\n    });\n  }, [params.repository]);\n\n  return (\n    <>\n      {repository && (\n        <RepositoryInfo>\n          <header>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n          </header>\n          <ul>\n            <li>\n              <strong>{repository.stargazers_count}</strong>\n              <span>Stars</span>\n            </li>\n            <li>\n              <strong>{repository.forks_count}</strong>\n              <span>Forks</span>\n            </li>\n            <li>\n              <strong>{repository.open_issues_count}</strong>\n              <span>Issues Abertas</span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      )}\n\n      <Issues>\n        {issues.map((issue) => (\n          <a key={issue.id} href={issue.html_url}>\n            <div>\n              <strong>{issue.title}</strong>\n              <p>{issue.user.login}</p>\n            </div>\n\n            <FiChevronRight size={20} />\n          </a>\n        ))}\n      </Issues>\n    </>\n  );\n};\n\nexport default Repository;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\nimport Repository from '../pages/Repository';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Redirect exact from=\"/\" to=\"/github-explorer/\" />\n    <Route path=\"/github-explorer\" component={Dashboard} />\n    <Route path=\"/repositories/:repository+\" component={Repository} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { useCallback } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider, DefaultTheme } from 'styled-components';\nimport usePersistedState from './utils/usePersistedState';\n\nimport Header from './components/Header';\nimport light from './styles/themes/light';\nimport dark from './styles/themes/dark';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\n\nconst App: React.FC = () => {\n  const [theme, setTheme] = usePersistedState<DefaultTheme>(\n    '@GithubExplorer:theme',\n    light,\n  );\n\n  const toggleTheme = useCallback(() => {\n    setTheme(theme.title === 'light' ? dark : light);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [theme.title]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <BrowserRouter>\n        <Header toggleTheme={toggleTheme} />\n        <Routes />\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}